# SwiftAutomation README

## About

SwiftAutomation provides client-side Apple event bindings for Apple's Swift 
language, enabling it to control "AppleScriptable" OS X applications directly.

For example:

tell application "TextEdit" to get text of document 1

let result = try TextEdit().documents[1].text.get() as String

SwiftAutomation is a native Apple event bridge for the Swift language, giving it
desktop automation capabilites equal to AppleScript's own. Its design is based 
on appscript (http://appscript.sourceforge.net), reworked into a smaller simpler 
implementation, and tailored to Swift syntax and static type system.

The SwiftAutomation framework defines the basic functionality for building 
object specifiers, converting data between Swift and AE types, and sending 
Apple events to running applications. Generated Swift modules provide the glue
code for controlling individual applications using their dictionary-defined 
syntax.

## Status

SwiftAutomation is alpha status: it is sufficiently complete to allow testing 
and experimentation, but some functionality is missing/incomplete/buggy. A 
rough draft of the SwiftAutomation documentation is included. Expect errors 
and omissions, use at own risk, etc.

## Get it

To clone the Xcode project to your own machine:

git clone https://bitbucket.org/hhas/swiftae.git

The project includes a `SwiftAutomation.framework` target for embedded use. 

To run simple examples (see test/main.swift), build and run the `test` target.

For convenience, glue files for TextEdit, Finder, and iTunes are included in 
the project. Additional glues can be generated by building the `aeglue` target
and running the resulting `aeglue` command line tool in Terminal. For example, 
to generate a Swift glue and accompanying documentation for macOS's Photos 
application:

/path/to/aeglue -o ~/Desktop Photos

A basic translation tool, SwiftAETranslate, that converts application commands
from AppleScript to Swift syntax is also included. To use it, build and run the 
SwiftAETranslate target. Type an AppleScript command into the top text pane and 
click the Run button to view the equivalent Swift syntax in the bottom pane. 
(If the 'Send Apple events' checkbox is selected, the command is also sent to
the target application and its result displayed too.)

Note that `aeglue` and SwiftAETranslate normally retrieve application
terminology using `ascrgdte` ('get dynamic terminology') events. Some
applications (e.g. Finder) have faulty `ascrgdte` handlers that fail to
return correct terminology, in which case use the `-o` or 'Use SDEF
terminology' options instead. (Be aware that SDEF-based terminology may also
contain bugs and omissions, in which case use raw four-char codes or correct
generated glue code by hand.)

SwiftAutomation requires OS X 10.11 and Swift 3.0 and Xcode 8.0 or later.


## Etc.

No warranty given, E&OE, use at own risk, etc.

